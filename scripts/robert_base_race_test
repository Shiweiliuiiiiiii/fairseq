#!/bin/bash
#SBATCH --job-name=robert_obert_race_test_LTH_oBERT_GMP
#SBATCH -p gpu
#SBATCH -N 1
#SBATCH --ntasks-per-node=1
#SBATCH --gpus-per-node=1
#SBATCH --gpus=1
#SBATCH -t 0-2:00:00
#SBATCH --cpus-per-task=18
#SBATCH -o robert_obert_race_test_LTH_oBERT_GMP.out


source /home/sliu/miniconda3/etc/profile.d/conda.sh
source activate prune_cry

MAX_EPOCH=3           # Number of training epochs.
LR=1e-05              # Peak LR for fixed LR scheduler.
NUM_CLASSES=4
MAX_SENTENCES=4       # Batch size per GPU.
UPDATE_FREQ=4         # Accumulate gradients to simulate training on 8 GPUs.
DATA_DIR=/home/sliu/project_space/pruning_fails/QA/robert/race/RACE
ROBERTA_PATH=/home/shiwei/Projects/fairseq/examples/roberta/pretrained_models/roberta.base/model.pt



for sparsity in 0 1 2 3 4 5 6 7 8 9 10
do
MODEL_PATH=/home/sliu/project_space/pruning_fails/QA/robert/race/LTH/0.2/checkpoint_best_iter$sparsity.pt
PREDS_OUT=/home/sliu/project_space/pruning_fails/QA/robert/race/LTH/0.2/preds_middle.tsv
TEST_SPLIT=test

fairseq-validate \
    $DATA_DIR \
    --valid-subset $TEST_SPLIT \
    --path $MODEL_PATH \
    --batch-size 1 \
    --task sentence_ranking \
    --criterion sentence_ranking \
    --save-predictions $PREDS_OUT
done


for sparsity in 0.2 0.36 0.488 0.590 0.672 0.738 0.791 0.8325 0.866 0.893
do
save_dir=/home/sliu/project_space/pruning_fails/QA/robert/race/oBERT/$sparsity


MODEL_PATH=$save_dir/checkpoint_last.pt
PREDS_OUT=$save_dir/preds_middle.tsv
TEST_SPLIT=test

fairseq-validate \
    $DATA_DIR \
    --valid-subset $TEST_SPLIT \
    --path $MODEL_PATH \
    --batch-size 1 \
    --task sentence_ranking \
    --criterion sentence_ranking \
    --save-predictions $PREDS_OUT
done



for sparsity in 0.2 0.36 0.488 0.590 0.672 0.738 0.791 0.8325 0.866 0.893
do
save_dir=/home/sliu/project_space/pruning_fails/QA/robert/race/GMP/$sparsity


MODEL_PATH=$save_dir/checkpoint_last.pt
PREDS_OUT=$save_dir/preds_middle.tsv
TEST_SPLIT=test

fairseq-validate \
    $DATA_DIR \
    --valid-subset $TEST_SPLIT \
    --path $MODEL_PATH \
    --batch-size 1 \
    --task sentence_ranking \
    --criterion sentence_ranking \
    --save-predictions $PREDS_OUT
done


